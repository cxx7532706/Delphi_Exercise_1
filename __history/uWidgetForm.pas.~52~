unit uWidgetForm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, uWidget, uWidgetReader;

const
  REDWIDGET : string = 'RedWidget';
  BLUEWIDGET : string = 'BlueWidget';

type
  TWidgetForm = class(TForm)
    DisplayMemo: TMemo;
    OpenFileButton: TButton;
    ComboBox: TComboBox;
    procedure OpenFileButtonClick(Sender: TObject);
    procedure ComboBoxChange(Sender: TObject);
    constructor Create(AOwner: TComponent); override;
  private
    FFileName : string;
    procedure DisplayResult(WidgetList : TWidgetList; DisplayMemo : TMemo);
  end;

var
  WidgetForm: TWidgetForm;

implementation

{$R *.dfm}
constructor TWidgetForm.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  ComboBox.Style := csDropDownList;
  FFileName := '';
  ComboBox.Enabled := false;
  DisplayMemo.Clear;
end;

procedure TwidgetForm.ComboBoxChange(Sender: TObject);
var
  WidgetList : TWidgetList;
  WidgetReader : TWidgetReader;
begin
  ShowMessage('changed');
{
    WidgetList := TWidgetList.Create;
    try
      WidgetReader := TWidgetReader.Create;
      try
        WidgetReader.LoadFileToList(FFileName,WidgetList);
        DisplayMemo.Text :='';
        DisplayResult(WidgetList, DisplayMemo);
      finally
        WidgetReader.Free;
      end;
    finally
      WidgetList.Free;
    end;
      }
end;

procedure TWidgetForm.OpenFileButtonClick(Sender: TObject);
var
  OpenFile : TOpenDialog;
begin
  OpenFile := TOpenDialog.Create(self);
  try
    OpenFile.InitialDir := GetCurrentDir;
    OpenFile.DefaultExt := 'txt';
    OpenFile.Filter := 'Text File(*.txt)|*.txt|all files(*.*)|*.*';
    OpenFile.FilterIndex := 1;
    OpenFile.Options := [ofFileMustExist];
    if OpenFile.Execute then
    begin
      FFileName := OpenFile.FileName;
      ComboBox.Enabled := true;
      ComboBox.Clear;
      ComboBox.AddItem(REDWIDGET,nil);
      ComboBox.AddItem(BLUEWIDGET,nil);
    end;
  finally
    FreeAndNil(OpenFile);
  end;
end;

procedure TWidgetForm.DisplayResult(WidgetList : TWidgetList; DisplayMemo : TMemo);
var
  I : Integer;
  Widget : TWidget;
begin
  WidgetList.SortById;
  for I := 0 to WidgetList.Count - 1 do
  begin
    Widget := WidgetList.Items[I];
    DisplayMemo.Lines.Add(Widget.AsString);
  end;

end;

end.
